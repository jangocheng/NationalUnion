@using System.Web.Mvc.Html
@using NationalUnion.Application.Commons
@model NationalUnion.Application.ViewModels.ManagerAccount
@{
    ViewBag.Title = "AccountPerfect";
    Layout = "~/Views/Shared/_LayoutEdit.cshtml";

    if (Request.Cookies["memberNo"] != null)
    {
        var memberNoCookie = Request.Cookies["memberNo"].Value;
        var memberNo = Int64.Parse(memberNoCookie);
    }
}

<script src="/Scripts/jquery.min.js" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery-ui.js")" type="text/javascript"></script>
@Styles.Render("~/Content/themes/bootstrap/css")
<link href="~/Content/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/Site.css" rel="stylesheet" />
<style type="text/css">
    .btn {
        display: inline-block;
        color: #FFF;
        background: url("/Content/images/btn_bg.png") repeat-x;
        line-height: 1;
        border-radius: 3px;
        vertical-align: middle;
    }

    .btn-text {
        vertical-align: top;
        text-align: center;
        height: 26px;
        line-height: 25px;
        padding: 0 12px;
        border: 1px solid #999;
        border-radius: 3px;
        cursor: pointer;
    }

    #btnCancel {
        margin-top: 20px;
        margin-left: 135px;
    }

    #btnSave {
        margin-top: 20px;
        margin-left: 20px;
    }
</style>

@*<div class="mvctool bgb">
    <a id="btnSave" style="float: left;" class="l-btn l-btn-plain">
        <span class="l-btn-left"><span class="l-btn-text icon-save" style="padding-left: 20px;">保存</span></span>
    </a>
</div>*@
@using (Html.BeginForm("AccountPerfect", "Home", null, FormMethod.Post, new { Id = "AccountPerfectForm" }))
{
    @Html.ValidationSummary(true);
    <table class="fromEditTable setTextWidth300">
        <tbody>
            <tr>
                <td style="width: 100px; text-align: right;">
                    @Html.LabelFor(model => model.ManagerId)：
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ManagerId, new { style = "width: 200px;", @readonly = true })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.ManagerId)
                </td>
            </tr>
            <tr>
                <td style="width: 100px; text-align: right;">
                    @Html.LabelFor(model => model.ManagerName)：
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ManagerName, new { style = "width: 200px;" })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.ManagerName)
                </td>
            </tr>
            <tr>
                <td style="width: 100px; text-align: right;">
                    @Html.LabelFor(model => model.ManagerEmail)：
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ManagerEmail, new { style = "width: 200px;" })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.ManagerEmail)
                </td>
            </tr>
            <tr>
                <td style="width: 100px; text-align: right;">
                    @Html.LabelFor(model => model.MobilePhone)：
                </td>
                <td>
                    @Html.TextBoxFor(model => model.MobilePhone, new { style = "width: 200px;" })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.MobilePhone)
                </td>
            </tr>
            <tr>
                <td style="width: 100px; text-align: right;">
                    @Html.LabelFor(model => model.IdCardNo)：
                </td>
                <td>
                    @Html.TextBoxFor(model => model.IdCardNo, new { style = "width: 200px;" })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.IdCardNo)
                </td>
            </tr>
            <tr>
                <td style="width: 100px; text-align: right;">
                    @Html.LabelFor(model => model.ChannelTypeStr)：
                </td>
                <td>
                    @Html.DropDownList("ChannelTypeStr", (List<SelectListItem>)ViewData["ChannelType"], new { style = "width:208px; height:22px;" })
                </td>
            </tr>
            <tr id="Channel">
                <td style="width: 100px; text-align: right;">
                    @Html.LabelFor(model => model.ChannelName)：
                </td>
                <td>
                    @Html.TextBoxFor(model => model.ChannelName, new { style = "width: 200px;" })
                    @Html.Hidden("ChannelId")
                </td>
                <td>
                    @Html.Label("输入渠道包含信息如*北京*", new { style = "color: red;" })
                </td>
            </tr>
            <tr id="ShareChannel">
                <td style="width: 100px; text-align: right;">
                    @Html.LabelFor(model => model.ShareChannelName)：
                </td>
                <td>
                    @Html.DropDownList("ShareChannelName", (List<SelectListItem>)ViewData["ShareChannel"], new { style = "width: 208px;" })
                </td>
            </tr>
            <tr>
                <td style="width: 100px; text-align: right;">
                    @Html.LabelFor(model => model.ProvinceId)：
                </td>
                <td>
                    @Html.DropDownList("ProvinceId", (List<SelectListItem>)ViewData["ProvList"], new { style = "width:208px; height:22px;" })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.ChannelName)
                </td>
            </tr>
            <tr>
                <td style="width: 100px; text-align: right;">
                    @Html.LabelFor(model => model.CityId)：
                </td>
                <td>
                    @Html.DropDownList("CityId", (List<SelectListItem>)ViewData["CityList"], new { style = "width:208px; height:22px;" })
                </td>
                <td>
                    @Html.ValidationMessageFor(model => model.ChannelName)
                </td>
            </tr>
            <tr>
                <td style="width: 100px; text-align: right;">
                    @Html.LabelFor(model => model.IsActiveStr)：
                </td>
                <td>
                    @Html.DropDownList("IsActiveStr", (List<SelectListItem>)ViewData["Status"], new { style = "width:208px; height:22px;" })
                </td>
            </tr>
        </tbody>
    </table>
}
<div>
    <a id="btnCancel"><span class="btn btn-text">取 消</span></a>
    <a id="btnSave"><span class="btn btn-text">提 交</span></a>
</div>
<div id="mes" class="field-validation-error"></div>

<script type="text/javascript">
    $(document).ready(function () {
        var selectValue = $("#ChannelTypeStr").val();
        checkBySelectedType(selectValue);
    });

    $("#ChannelTypeStr").change(function () {
        var selectValue = $("select[name='ChannelTypeStr']").val();
        checkBySelectedType(selectValue);
    });

    var checkBySelectedType = function (value) {
        if (value == '@((ChannelType.ShareTool).ToString())') {
            $("#Channel").hide();
            $("#ShareChannel").show();
        } else {
            $("#Channel").show();
            $("#ShareChannel").hide();
        }
    };
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#ChannelName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("Search", "ManagerAccount")",
                    type: "POST",
                    dataType: "json",   // json格式数据，默认是text
                    //data: { keyword: request.term },  // 参数
                    data: { channelType: $("#ChannelTypeStr").val(), keyword: $("#ChannelName").val() }, // 参数
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.text, value: item.value }; // 将返回的jsonresult的属性赋值给autocomplete item
                        }));
                    }
                });
            },
            focus: function (event, ui) {
                $("#ChannelName").val(ui.item.label);   // 选中item的文本
                return false;
            },
            select: function (event, ui) {
                $("#ChannelName").val(ui.item.label);   // 选中item的文本
                $('#ChannelId').val(parseInt(ui.item.value));    // 选中item的值
                return false;
            }
        });
    });
</script>

<script type="text/javascript">
    $(function () {
        $("#ProvinceId").change(function () {
            changeCity();
        });
    });

    // 根据省份加载城市
    function changeCity() {
        var selectedProvinceId = $("#ProvinceId").val();
        if (selectedProvinceId.length == 0) {
            emptyCity();
        } else {
            $.post('@Url.Action("GetCityList", "ManagerAccount")', { pid: parseInt(selectedProvinceId) }, function (data) {
                $('#CityId').empty();
                $.each(data, function (i, item) {
                    $('#CityId').append($('<option></option>').val(item.Value).text(item.Text));
                });
            });
        }
    }

    // 设置城市清空
    function emptyCity() {
        $('#CityId').empty();
        $('#CityId').append($('<option></option>').val('').text('请选择'));
    }
</script>

<script type="text/javascript">
    $(function () {
        $("#btnSave").click(function () {
            $.ajax({
                url: "/Home/AccountPerfect",
                type: "POST",
                data: $("#AccountPerfectForm").serialize(),
                dataType: "json",
                success: function (data) {
                    if (data.Type == 1) {
                        window.parent.frameReturnByClose();
                    } else {
                        $("#mes").html(data.Message);
                    }
                }
            });
        });
    });
</script>
